{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","selectedTodo","setSelectedTodo","setShowModal","className","map","todo","id","completed","title","type","onClick","handleShowDetails","TodoFilter","initialTodos","setTodos","useState","query","setQuery","All","filterParam","setFilterParam","useEffect","Active","filter","Completed","trim","toLowerCase","includes","applyFilters","onSubmit","event","preventDefault","onChange","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","setTodo","loading","setLoading","selectUser","userId","user","prevTodo","finally","href","email","name","App","setInitialTodos","showModal","items","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.363b0242.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype TodoListProps = {\n  todos: Todo[] | null;\n  selectedTodo: Todo & { user?: User } | null;\n  setSelectedTodo: React.Dispatch<React\n    .SetStateAction<Todo & { user?: User } | null>>;\n  setShowModal: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n  setShowModal,\n}) => {\n  const handleShowDetails = (todo: Todo) => {\n    setShowModal(true);\n\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos && todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={selectedTodo?.id === todo.id\n              ? 'has-background-info-light' : ''}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed\n                ? 'has-text-success' : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  handleShowDetails(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={selectedTodo?.id === todo.id\n                    ? 'far fa-eye-slash' : 'far fa-eye'}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { Filter } from '../../types/Filter';\nimport { Todo } from '../../types/Todo';\n\ntype TodoFilterProps = {\n  initialTodos: Todo[] | null;\n  setTodos: React.Dispatch<React.SetStateAction<Todo[] | null>>\n};\n\nexport const TodoFilter: React.FC<TodoFilterProps> = ({\n  initialTodos,\n  setTodos,\n}) => {\n  const [query, setQuery] = useState('');\n  const [filterParam, setFilterParam] = useState(Filter.All);\n\n  const handleFilter = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (initialTodos !== null) {\n      switch (event.target.value) {\n        case Filter.Active:\n          setFilterParam(Filter.Active);\n          break;\n        case Filter.Completed:\n          setFilterParam(Filter.Completed);\n          break;\n        default:\n          setFilterParam(Filter.All);\n          break;\n      }\n    }\n  };\n\n  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n  };\n\n  const applyFilters = () => {\n    let todos: Todo[] | [] = [];\n\n    if (initialTodos !== null) {\n      todos = [...initialTodos];\n    }\n\n    switch (filterParam) {\n      case Filter.Active:\n        todos = todos.filter(todo => !todo.completed);\n        break;\n      case Filter.Completed:\n        todos = todos.filter(todo => todo.completed);\n        break;\n      default:\n        break;\n    }\n\n    if (initialTodos !== null) {\n      setTodos(todos.filter(todo => (\n        todo.title.trim().toLowerCase().includes(query.trim().toLowerCase())\n      )));\n    }\n  };\n\n  const deleteQuery = () => {\n    setQuery('');\n  };\n\n  useEffect(() => {\n    applyFilters();\n  }, [query, filterParam]);\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={handleSubmit}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleFilter}\n          >\n            <option\n              value=\"all\"\n            >\n              {Filter.All}\n            </option>\n            <option\n              value=\"active\"\n            >\n              {Filter.Active}\n            </option>\n            <option\n              value=\"completed\"\n            >\n              {Filter.Completed}\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handleSearch}\n          value={query}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={deleteQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype TodoModalProps = {\n  todo: Todo & { user?: User } | null;\n  setTodo: React.Dispatch<React.SetStateAction<Todo & { user?: User } | null>>;\n  setShowModal: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nexport const TodoModal: React.FC<TodoModalProps> = ({\n  todo,\n  setTodo,\n  setShowModal,\n}) => {\n  const [loading, setLoading] = useState(false);\n\n  const selectUser = () => {\n    if (todo) {\n      setLoading(true);\n      getUser(todo.userId)\n        .then(user => {\n          setTodo(prevTodo => ({\n            ...prevTodo,\n            user,\n          }) as Todo & { user: User });\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n  };\n\n  const handleClose = () => {\n    setShowModal(false);\n    setTodo(null);\n  };\n\n  useEffect(() => {\n    selectUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={todo?.completed\n                  ? 'has-text-success' : 'has-text-danger'}\n              >\n                {todo?.completed ? (\n                  'Done'\n                ) : (\n                  'Planned'\n                )}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${todo?.user?.email}`}>\n                {todo?.user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [initialTodos, setInitialTodos] = useState<Todo[] | null>([]);\n  const [todos, setTodos] = useState<Todo[] | null>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo & { user?: User; } | null>(null);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos().then(items => {\n      setInitialTodos(items);\n      setTodos(items);\n    }).finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                initialTodos={initialTodos}\n                setTodos={setTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && todos?.length === 0 ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={todos}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                  setShowModal={setShowModal}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && showModal && (\n        <TodoModal\n          todo={selectedTodo}\n          setTodo={setSelectedTodo}\n          setShowModal={setShowModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}